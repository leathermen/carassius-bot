name: Lint and build

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ^1.23
      - uses: golangci/golangci-lint-action@v6
        with:
          version: v1.60
          skip-cache: true
          args: --timeout=5m

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ^1.23
      - name: Install coverage deps
        run: |
          go install github.com/gotesttools/gotestfmt/v2/cmd/gotestfmt@latest
          go get github.com/t-yuki/gocover-cobertura
          go install github.com/t-yuki/gocover-cobertura
      - run: go test -race -json -v -covermode atomic -coverprofile coverage.txt ./... 2>&1 | tee /tmp/gotest.log | gotestfmt
      - run: gocover-cobertura < coverage.txt > coverage.xml
      - name: Generate code coverage report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage.xml
          badge: false
          fail_below_min: false
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: "50 85"
      - run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY

  build:
    name: Build the image
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: nm00dev
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - id: version
        run: echo version=nm00dev/nm:proxyv2_$(date +%Y-%m-%d-%H-%M-%S)_${{ github.sha }} >> $GITHUB_OUTPUT
      - run: echo TAGS_LIST=${{ steps.version.outputs.version }} >> $GITHUB_ENV
      - if: github.ref == 'refs/heads/main'
        run: echo TAGS_LIST=${{ env.TAGS_LIST }},nm00dev/nm:proxyv2_latest >> $GITHUB_ENV
      - if: startsWith(github.ref, 'refs/heads/env/')
        run: echo TAGS_LIST=${{ env.TAGS_LIST }},nm00dev/nm:proxyv2_${GITHUB_REF#refs/heads/env/}_latest >> $GITHUB_ENV
      - name: Build docker image and push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ env.TAGS_LIST }}
    outputs:
      version: ${{ steps.version.outputs.version }}

  update_stage:
    name: Update stage
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - run: aws s3 cp s3://nmvn-dynamic-environments/static/stage.json . || echo '{}' > stage.json
      - name: Update the image version in the json file
        uses: mikefarah/yq@v4.44.2
        with:
          cmd: yq -i '.proxy-v2 = "${{ needs.build.outputs.version }}"' stage.json
      - run: aws s3 cp stage.json s3://nmvn-dynamic-environments/static/
      - name: Update proxy-infra git docker version
        uses: convictional/trigger-workflow-and-wait@v1.6.1
        with:
          owner: nodemaven
          repo: proxy-infra
          github_token: ${{ secrets.NODEMAVENGITBOT_GITHUB_TOKEN }}
          workflow_file_name: update-stage.yml
          ref: master
          client_payload: '{"service":"proxy-v2","dockerimage":"${{ needs.build.outputs.version }}","actor":"${{ github.actor }}"}'
      - uses: convictional/trigger-workflow-and-wait@v1.6.1
        with:
          owner: nodemaven
          repo: proxy-infra
          github_token: ${{ secrets.NODEMAVENGITBOT_GITHUB_TOKEN }}
          workflow_file_name: deploy-stage.yml
          ref: master
          client_payload: '{"service":"proxy-v2"}'

  update_env:
    name: Update the environment
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/heads/env/') || startsWith(github.event.pull_request.head.ref, 'env/')
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - if: startsWith(github.ref, 'refs/heads/env/')
        run: echo ENVNAME=${GITHUB_REF#refs/heads/env/} >> $GITHUB_ENV
      - if: startsWith(github.event.pull_request.head.ref, 'env/')
        run: echo ENVNAME=$(echo "${{ github.event.pull_request.head.ref }}" | sed 's#^env/##') >> $GITHUB_ENV
      - run: aws s3 cp s3://nmvn-dynamic-environments/env/${{ env.ENVNAME }}.json ${{ env.ENVNAME }}.json || aws s3 cp s3://nmvn-dynamic-environments/static/stage.json ${{ env.ENVNAME }}.json
      - name: Update the image version in the json file
        uses: mikefarah/yq@v4.44.2
        with:
          cmd: yq -i '.proxy-v2 = "${{ needs.build.outputs.version }}"' ${{ env.ENVNAME }}.json
      - run: aws s3 cp ${{ env.ENVNAME }}.json s3://nmvn-dynamic-environments/env/
      - uses: convictional/trigger-workflow-and-wait@v1.6.1
        with:
          owner: nodemaven
          repo: proxy-infra
          github_token: ${{ secrets.NODEMAVENGITBOT_GITHUB_TOKEN }}
          workflow_file_name: deploy-dynamic-env.yml
          ref: master
          client_payload: '{"service":"proxy-v2","env":"${{ env.ENVNAME }}"}'
